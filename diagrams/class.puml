@startuml

!define valueobject class

skinparam classAttributeIconSize 0
skinparam style strictuml

' Value Objects
valueobject UserId {
    + value : String
}

valueobject UserName {
    + value : String
}

valueobject MailAddress {
    + value : String
}

' Entity
class User {
    + userId : UserId
    + userName : UserName
    + email : MailAddress
}

' Domain Service
class UserDomainService {
    + exists(user : User) : boolean
}

' Repository Interface
interface IUserRepository {
    + save(user : User) : void
    + update(user : User) : void
    + delete(user : User) : void
    + find_by_id(userId : UserID) : User?
    + find_by_name(userName : UserName) : [User]
}

Interface IUserFactory {
    +create(name: UserName, email: MailAddress): User
}



' Application Service
class UserRegisterService {
    + user_repository : IUserRepository
    + domain_service: UserDomainService
    + user_factory: IUserFactory
}

UserFactory -u-> IUserFactory
SQLAlchemyUserRepository -u-> IUserRepository

UserRegisterService ..> IUserRepository : uses
UserRegisterService ..> UserDomainService : uses
UserRegisterService ..> IUserFactory : uses

UserDomainService ..> User : uses
UserDomainService ..> IUserRepository : uses

IUserFactory ..> User : creates

User o-- UserName
User o-- UserId
User o-- MailAddress


@enduml

